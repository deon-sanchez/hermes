scalar DateTime

type Comments {
  _id: ID!
  postId: ID!
  userId: ID!
  content: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type CommentsRelationships {
  users: [Users!]!
  posts: [Posts!]!
}

type Query {
  comments(findCommentInput:FindCommentInput): [Comments!]!
  comment(findCommentsInput: FindCommentsInput!): Comments!
}

type Mutation {
  createComment(createCommentInput: CreateCommentInput!): Comments!
  updateComment(updateCommentInput: UpdateCommentInput!): Comments!
  deleteComment(_id: ID!): Comments!
}

input CreateCommentInput {
  postId: ID!
  userId: ID!
  content: String!
}

input UpdateCommentInput {
  _id: ID!
  content: String!
}

input FindCommentInput {
  _id: ID!
}

input FindCommentsInput {
  postId: ID
  userId: ID
}